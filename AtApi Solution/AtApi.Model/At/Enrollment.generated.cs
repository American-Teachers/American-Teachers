//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace AtApi.Model.At
{
   /// <summary>
   /// Enrollment
   /// </summary>
   public partial class Enrollment
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected Enrollment()
      {
         Init();
      }

      /// <summary>
      /// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      /// </summary>
      public static Enrollment CreateEnrollmentUnsafe()
      {
         return new Enrollment();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="classid">ClassId</param>
      /// <param name="studentid">StudentId</param>
      public Enrollment(int classid, int studentid)
      {
         this.ClassId = classid;

         this.StudentId = studentid;


         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="classid">ClassId</param>
      /// <param name="studentid">StudentId</param>
      public static Enrollment Create(int classid, int studentid)
      {
         return new Enrollment(classid, studentid);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Required
      /// Id
      /// </summary>
      [Key]
      [Required]
      public int Id { get; protected set; }

      /// <summary>
      /// Required
      /// ClassId
      /// </summary>
      [Required]
      public int ClassId { get; set; }

      /// <summary>
      /// Required
      /// StudentId
      /// </summary>
      [Required]
      public int StudentId { get; set; }

   }
}

